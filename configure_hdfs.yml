---
- hosts: all
  become: yes
  vars_files:
    - hadoop_vars.yml

  tasks:
    - name: Configure core-site.xml on each node
      template:
        src: standalone_templates/core-site.xml.j2
        dest: "{{ hadoop_home }}/etc/hadoop/core-site.xml"
        owner: "{{ hadoop_user }}"
        group: "{{ hadoop_group }}"
        mode: 0644

    - name: Configure hdfs-site.xml on each node
      template:
        src: standalone_templates/hdfs-site.xml.j2
        dest: "{{ hadoop_home }}/etc/hadoop/hdfs-site.xml"
        owner: "{{ hadoop_user }}"
        group: "{{ hadoop_group }}"
        mode: 0644


- hosts: namenodes
  become: yes
  vars_files:
    - hadoop_vars.yml

  tasks:
    - name: Create NameNode directory
      file:
        path: "{{ hdfs_namenode_dir }}"
        state: directory
        owner: "{{ hadoop_user }}"
        group: "{{ hadoop_group }}"
        mode: 0755
        
    - name: Check if NameNode is already formatted
      stat:
        path: "{{ hdfs_namenode_dir }}/current/VERSION"
      register: namenode_version_file

    - name: Format the NameNode (only if not already formatted)
      command: "{{ hadoop_home }}/bin/hdfs namenode -format"
      when: not namenode_version_file.stat.exists
    
    - name: Stop NameNode service
      shell: "{{ hadoop_home }}/bin/hdfs --daemon stop namenode"
      become: yes

    - name: Start NameNode service
      shell: "{{ hadoop_home }}/bin/hdfs --daemon start namenode"
      become: yes


- hosts: datanodes
  become: yes
  vars_files:
    - hadoop_vars.yml

  tasks:
    - name: Create DataNode directory
      file:
        path: "{{ hdfs_datanode_dir }}"
        state: directory
        owner: "{{ hadoop_user }}"
        group: "{{ hadoop_group }}"
        mode: 0755

    - name: Stop DataNode service
      shell: "{{ hadoop_home }}/bin/hdfs --daemon stop datanode"
      become: yes

    - name: Start DataNode service
      shell: "{{ hadoop_home }}/bin/hdfs --daemon start datanode"
      become: yes
